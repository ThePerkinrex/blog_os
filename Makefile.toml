extend = "env.toml"

[env]
CARGO_MAKE_WORKSPACE_EMULATION = true
# a list of crate members. since we do not have a Cargo.toml, we will need to specify this in here.
CARGO_MAKE_CRATE_WORKSPACE_MEMBERS = [
	"qemu-common",
	"runner",
	"userspace",
	"kernel-libs",
	"kernel",
]
COV_ARGS = ["test", "--no-report"]

[env.gdb]
GDB_LISTEN = true

[env.no_display]
NO_DISPLAY = true


[env.cov-clean]
COV_ARGS = ["clean"]

[env.cov-report-open]
COV_ARGS = ["report", "--open"]

[env.cov-report-html]
COV_ARGS = ["report", "--html"]

[env.cov-report-vscode]
COV_ARGS = ["report", "--lcov", "--output-path", "./target/lcov.info"]

[tasks.run]
workspace = false
description = "Run the kernel"
dependencies = [{ name = "run", path = "kernel/" }]


[tasks.run-gdb-server]
workspace = false
dependencies = [
	{ name = "build", path = "kernel/" },
	{ name = "build", path = "runner/" },
]
command = "./runner/target/release/runner"
args = [
	"--target",
	"./kernel/target",
	"--gdb",
	"--no-start-gdb",
	"./kernel/target/x86_64-unknown-none/${CARGO_BUILD_DEST}/blog_os_kernel",
]

[tasks.cov]
workspace = false
dependencies = [{ name = "cov", path = "kernel-libs" }]

[tasks.pdf]
workspace = false
script_runner = "@duckscript"
script = '''
git = which git
if is_empty git
	exit
end
echo "Git is here" ${git}
out = exec git rev-parse --short HEAD
echo "Commit is" ${out.stdout}
hash = trim ${out.stdout}
exec typst compile --input version=${hash} docs/main.typ docs/docs.pdf
'''


[tasks.pdf-version]
workspace = false
script_runner = "@duckscript"
script = '''
exec typst compile --input version=${1} docs/main.typ docs/docs.pdf
'''